version: '3.8'

name: url-shortener-prod

services:
  # API service
  api:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    image: url-shortener-api:latest
    container_name: url-shortener-api
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8000:8000"
    environment:
      - DATABASE_HOST=db
      - DATABASE_PORT=5432
      - DATABASE_USER=${DB_USER:-postgres}
      - DATABASE_PASSWORD=${DB_PASSWORD:-postgres}
      - DATABASE_NAME=${DB_NAME:-url_shortener}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - ENVIRONMENT=${ENVIRONMENT:-production}
      - SECRET_KEY=${SECRET_KEY:-CHANGE_ME_IN_PRODUCTION}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - API_PREFIX=/api
    volumes:
      - app_logs:/app/logs
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 15s

  # PostgreSQL database
  db:
    image: postgres:16.9-bullseye
    container_name: url-shortener-db
    restart: unless-stopped
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD:-postgres}
      - POSTGRES_USER=${DB_USER:-postgres}
      - POSTGRES_DB=${DB_NAME:-url_shortener}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  # Redis for caching and rate limiting
  redis:
    image: redis:7.2-alpine
    container_name: url-shortener-redis
    restart: unless-stopped
    command: >
      redis-server --appendonly yes
      --maxmemory 256mb
      --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s

volumes:
  postgres_data:
    name: url-shortener-postgres-data
  redis_data:
    name: url-shortener-redis-data
  app_logs:
    name: url-shortener-logs

networks:
  app_network:
    name: url-shortener-network 